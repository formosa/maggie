Environmental Setup with VSCode in Windows 11.
1. Install the latest 64bit version of Git for Windows: https://git-scm.com/downloads/win
2. Install Python 3.10 64bit Windows installer from: https://www.python.org/downloads/windows/
    Or, use the directly link for verion 3.10.11: https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe
3. Before creating a virtual environment, ensure the specific Python version is installed. Run:

    powershell '''
        py --list
    '''
    
    or

    powershell '''
        py -X.Y --version  # Replace X.Y with the version you need
    '''
    Navigate to Your Project Directory
    Use PowerShell to move to your desired project folder:

    powershell '''
        cd "C:\path\to\your\project"
    '''
    
    If the folder doesnâ€™t exist, create it:

    powershell '''
        mkdir "C:\path\to\your\project"
        cd "C:\path\to\your\project"
    '''

    Create the Virtual Environment
    Run the following command, replacing 3.10 with your desired Python version:

    powershell '''
        py -3.10 -m venv venv
    ''

    This creates a venv folder inside your project directory.

    Activate the Virtual Environment
    Once created, activate the virtual environment:

    powershell '''
        .\venv\Scripts\Activate
    '''
    
    After activation, your PowerShell prompt will show (venv), indicating that the virtual environment is active.

    Verify the Python Version in the Virtual Environment
    Check that the correct Python version is being used:

    powershell '''
        python --version
    '''
    
    or

    powershell '''
        py --version
    '''
    
    Update pip, setuptools, and wheel packages inside the Virtual Environment
    
    power shell '''
         python -m pip install --upgrade pip setuptools wheel
    '''

    Deactivate the Virtual Environment
    When you're done, deactivate the virtual environment by running:

    powershell '''
        deactivate
    '''